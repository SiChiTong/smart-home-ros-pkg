// ROS message includes
#include "ros/ros.h"
#include <std_msgs/Empty.h>
#include <std_msgs/Empty.h>
#include <std_msgs/Empty.h>
#include <std_msgs/Empty.h>
#include <std_msgs/Empty.h>
#include <std_msgs/Empty.h>
#include <std_msgs/Empty.h>
#include <std_msgs/Empty.h>
#include <std_msgs/Empty.h>
#include <std_msgs/Empty.h>
#include <std_msgs/Empty.h>
#include <std_msgs/Empty.h>
#include <std_msgs/Empty.h>
#include <std_msgs/Empty.h>
#include <std_msgs/Int32.h>

/* protected region user include files on begin */
/* protected region user include files end */

class home_command_manager_config
{
public:
};

class home_command_manager_data
{
// autogenerated: don't touch this class
public:
    //input data
    std_msgs::Int32 in_command;
    //output data
    std_msgs::Empty out_command1;
    bool out_command1_active;
    std_msgs::Empty out_command2;
    bool out_command2_active;
    std_msgs::Empty out_command3;
    bool out_command3_active;
    std_msgs::Empty out_command4;
    bool out_command4_active;
    std_msgs::Empty out_command5;
    bool out_command5_active;
    std_msgs::Empty out_command6;
    bool out_command6_active;
    std_msgs::Empty out_command7;
    bool out_command7_active;
    std_msgs::Empty out_command8;
    bool out_command8_active;
    std_msgs::Empty out_command9;
    bool out_command9_active;
    std_msgs::Empty out_command10;
    bool out_command10_active;
    std_msgs::Empty out_command11;
    bool out_command11_active;
    std_msgs::Empty out_command12;
    bool out_command12_active;
    std_msgs::Empty out_command13;
    bool out_command13_active;
    std_msgs::Empty out_command14;
    bool out_command14_active;
};

class home_command_manager_impl
{
    /* protected region user member variables on begin */
	bool out_command1_active;
	bool out_command2_active;
	bool out_command3_active;
	bool out_command4_active;
	bool out_command5_active;
	bool out_command6_active;
	bool out_command7_active;
	bool out_command8_active;
	bool out_command9_active;
	bool out_command10_active;
	bool out_command11_active;
	bool out_command12_active;
	bool out_command13_active;
	bool out_command14_active;
    /* protected region user member variables end */

public:
    home_command_manager_impl() 
    {
        /* protected region user constructor on begin */

        /* protected region user constructor end */
    }

    void configure(home_command_manager_config config) 
    {
        /* protected region user configure on begin */
        /* protected region user configure end */
    }

    void update(home_command_manager_data &data, home_command_manager_config config)
    {
        /* protected region user update on begin */
    	data.out_command1_active = out_command1_active;
    	data.out_command2_active = out_command2_active;
    	data.out_command3_active = out_command3_active;
    	data.out_command4_active = out_command4_active;
    	data.out_command5_active = out_command5_active;
    	data.out_command6_active = out_command6_active;
    	data.out_command7_active = out_command7_active;
    	data.out_command8_active = out_command8_active;
    	data.out_command9_active = out_command9_active;
    	data.out_command10_active = out_command10_active;
    	data.out_command11_active = out_command11_active;
    	data.out_command12_active = out_command12_active;
    	data.out_command13_active = out_command13_active;
    	data.out_command14_active = out_command14_active;

    	out_command1_active = false;
		out_command2_active = false;
		out_command3_active = false;
		out_command4_active = false;
		out_command5_active = false;
		out_command6_active = false;
		out_command7_active = false;
		out_command8_active = false;
		out_command9_active = false;
		out_command10_active = false;
		out_command11_active = false;
		out_command12_active = false;
		out_command13_active = false;
		out_command14_active = false;
        /* protected region user update end */
    }

    void topicCallback_command(const std_msgs::Int32::ConstPtr& msg)
    {
        /* protected region user implementation of subscribe callback for command on begin */
    	out_command1_active = false;
    	out_command2_active = false;
    	out_command3_active = false;
    	out_command4_active = false;
    	out_command5_active = false;
    	out_command6_active = false;
    	out_command7_active = false;
    	out_command8_active = false;
    	out_command9_active = false;
    	out_command10_active = false;
    	out_command11_active = false;
    	out_command12_active = false;
    	out_command13_active = false;
    	out_command14_active = false;

    	switch(msg->data) {
    		case 1 :
    	    	out_command1_active = true;
    	    	break;
    		case 2 :
    	    	out_command2_active = true;
    	    	break;
    		case 3 :
    	    	out_command3_active = true;
    	    	break;
    		case 4 :
    	    	out_command4_active = true;
    	    	break;
    		case 5 :
    	    	out_command5_active = true;
    	    	break;
    		case 6 :
    	    	out_command6_active = true;
    	    	break;
    		case 7 :
    	    	out_command7_active = true;
    	    	break;
    		case 8 :
    	    	out_command8_active = true;
    	    	break;
    		case 9 :
    	    	out_command9_active = true;
    	    	break;
    		case 10 :
    	    	out_command10_active = true;
    	    	break;
    		case 11 :
    	    	out_command11_active = true;
    	    	break;
    		case 12 :
    			out_command12_active = true;
    		    break;
    		case 13 :
    		    out_command13_active = true;
    		    break;
    		case 14 :
    		    out_command14_active = true;
    		    break;
    		default :
    			break;
    	}


        /* protected region user implementation of subscribe callback for command end */
    }



    /* protected region user additional functions on begin */
    /* protected region user additional functions end */
};
